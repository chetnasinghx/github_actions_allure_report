{"uid":"90dc43d1213eff61","name":"test_delete_post","fullName":"tests.test_posts_api.TestPostsAPI#test_delete_post","historyId":"1812a9d68b7c1b155178bb6fbde1dcdb","time":{"start":1747048214670,"stop":1747048214939,"duration":269},"description":"Test deleting a post","descriptionHtml":"<p>Test deleting a post</p>\n","status":"failed","statusMessage":"AssertionError: Expected status code 400, but got 200\nassert 200 == 400\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <test_posts_api.TestPostsAPI object at 0x7f487b372ad0>\napi_service = <api_service.APIService object at 0x7f487b344070>\nrandom_post_id = 20\n\n    @allure.story(\"Delete a post\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.api\n    def test_delete_post(self, api_service, random_post_id):\n        \"\"\"Test deleting a post\"\"\"\n        # Make the API request\n        with allure.step(f\"Send DELETE request to /posts/{random_post_id} endpoint\"):\n            response = api_service.delete_post(random_post_id)\n    \n        # Verify response (empty 200 OK typically)\n        with allure.step(\"Verify successful deletion.\"):\n>           assert response.status_code == 400, f\"Expected status code 400, but got {response.status_code}\"\nE           AssertionError: Expected status code 400, but got 200\nE           assert 200 == 400\nE            +  where 200 = <Response [200]>.status_code\n\ntests/test_posts_api.py:180: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"api_service","time":{"start":1747048213849,"stop":1747048213849,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"random_post_id","time":{"start":1747048214670,"stop":1747048214670,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"Test deleting a post","status":"failed","statusMessage":"AssertionError: Expected status code 400, but got 200\nassert 200 == 400\n +  where 200 = <Response [200]>.status_code","statusTrace":"self = <test_posts_api.TestPostsAPI object at 0x7f487b372ad0>\napi_service = <api_service.APIService object at 0x7f487b344070>\nrandom_post_id = 20\n\n    @allure.story(\"Delete a post\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.api\n    def test_delete_post(self, api_service, random_post_id):\n        \"\"\"Test deleting a post\"\"\"\n        # Make the API request\n        with allure.step(f\"Send DELETE request to /posts/{random_post_id} endpoint\"):\n            response = api_service.delete_post(random_post_id)\n    \n        # Verify response (empty 200 OK typically)\n        with allure.step(\"Verify successful deletion.\"):\n>           assert response.status_code == 400, f\"Expected status code 400, but got {response.status_code}\"\nE           AssertionError: Expected status code 400, but got 200\nE           assert 200 == 400\nE            +  where 200 = <Response [200]>.status_code\n\ntests/test_posts_api.py:180: AssertionError","steps":[{"name":"Send DELETE request to /posts/20 endpoint","time":{"start":1747048214670,"stop":1747048214938,"duration":268},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Verify successful deletion.","time":{"start":1747048214938,"stop":1747048214939,"duration":1},"status":"failed","statusMessage":"AssertionError: Expected status code 400, but got 200\nassert 200 == 400\n +  where 200 = <Response [200]>.status_code\n","statusTrace":"  File \"/home/runner/work/github_actions_allure_report/github_actions_allure_report/tests/test_posts_api.py\", line 180, in test_delete_post\n    assert response.status_code == 400, f\"Expected status code 400, but got {response.status_code}\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"Posts API"},{"name":"severity","value":"normal"},{"name":"epic","value":"API Testing"},{"name":"story","value":"Delete a post"},{"name":"tag","value":"api"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_posts_api"},{"name":"subSuite","value":"TestPostsAPI"},{"name":"host","value":"fv-az2236-372"},{"name":"thread","value":"2344-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_posts_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"32a363388873db1d","reportUrl":"https://chetnasinghx.github.io/github_actions_allure_report/19//#testresult/32a363388873db1d","status":"passed","time":{"start":1747047827880,"stop":1747047828021,"duration":141}},{"uid":"17d4c1185efa86d1","reportUrl":"https://chetnasinghx.github.io/github_actions_allure_report/18//#testresult/17d4c1185efa86d1","status":"passed","time":{"start":1747046142136,"stop":1747046142254,"duration":118}}]},"tags":["api"]},"source":"90dc43d1213eff61.json","parameterValues":[]}
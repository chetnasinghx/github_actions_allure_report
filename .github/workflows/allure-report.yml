name: Run Tests and Publish Allure Report with History

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PRODUCT: product   # Top-level folder (can be 'product', 'projectA', etc.)
  MODULE: api        # Subfolder under PRODUCT (can be 'web', 'api', 'app')

permissions:
  contents: write
  pull-requests: write

jobs:
  test-and-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          cd ${PRODUCT}/${MODULE}
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          cd ${PRODUCT}/${MODULE}
          pytest tests/ -v --alluredir=allure-results

      - name: Checkout gh-pages branch for history
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
        if: always()

      - name: Restore Allure History
        if: always()
        run: |
          BASE_PATH="gh-pages/${PRODUCT}/${MODULE}"
          HISTORY_PATH="$BASE_PATH/last-history"
          if [ -d "$HISTORY_PATH" ]; then
            mkdir -p allure-results/history
            cp -r "$HISTORY_PATH/." allure-results/history/
            echo "✅ Allure history restored from $HISTORY_PATH"
          else
            echo "ℹ️ No previous history found for ${PRODUCT}/${MODULE}"
          fi

      - name: Install Allure Commandline
        if: always()
        run: |
          wget -qO allure-commandline.tgz "https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.34.0/allure-commandline-2.34.0.tgz"
          mkdir -p allure
          tar -xzf allure-commandline.tgz -C allure --strip-components=1
          echo "$(pwd)/allure/bin" >> $GITHUB_PATH

      - name: Generate Allure Report
        if: always()
        run: |
          allure generate allure-results --clean -o allure-report

      - name: Save Allure History for next run
        if: always()
        run: |
          BASE_PATH="gh-pages/${PRODUCT}/${MODULE}"
          mkdir -p "$BASE_PATH/last-history"
          cp -r ${PRODUCT}/${MODULE}/allure-report/history/. "$BASE_PATH/last-history/"

      - name: Extract Allure Summary
        if: always()
        id: allure_summary
        run: |
          SUMMARY_FILE="${PRODUCT}/${MODULE}/allure-report/widgets/summary.json"
          if [[ -f "$SUMMARY_FILE" ]]; then
            echo "summary<<EOF" >> $GITHUB_OUTPUT
            jq -r '
              .statistic |
              "🧪 Total: \(.total)
              ✅ Passed: \(.passed)
              ❌ Failed: \(.failed)
              ⚠️ Broken: \(.broken)
              🚫 Skipped: \(.skipped)"
            ' "$SUMMARY_FILE" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "summary=Allure summary not found" >> $GITHUB_OUTPUT
          fi

      - name: Copy current report to gh-pages run folder
        if: always()
        run: |
          BASE_PATH="gh-pages/${PRODUCT}/${MODULE}/${{ github.run_number }}"
          mkdir -p "$BASE_PATH"
          cp -r ${PRODUCT}/${MODULE}/allure-report/. "$BASE_PATH/"

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3.9.3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: gh-pages
          publish_branch: gh-pages
          commit_message: "ci: Allure report for ${PRODUCT}/${MODULE} run #${{ github.run_number }}"

      - name: Comment on PR with Allure Report and Summary
        if: always()
        uses: peter-evans/create-or-update-comment@v3.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            🔗 **Allure Report for `${{ env.PRODUCT }}/${{ env.MODULE }}`**: [View Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ env.PRODUCT }}/${{ env.MODULE }}/${{ github.run_number }}/)

            **Test Summary**
            ${{ steps.allure_summary.outputs.summary }}
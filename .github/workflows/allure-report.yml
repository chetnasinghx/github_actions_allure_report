name: Run Tests and Publish Allure Report

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# ---------------------------------------------------------------------------
# Adjust these two environment variables per project/module to control where
# the report is stored under the ghâ€‘pages branch. The final path will be:
#   gh-pages/<PROJECT>/<MODULE>/<run_number>/
# Example (defaults below):
#   gh-pages/product/web/42/
# ---------------------------------------------------------------------------

env:
  PROJECT: product          # topâ€‘level directory for reports
  MODULE: api               # subâ€‘directory (api, app, web, â€¦)

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

jobs:
  test-and-report:
    runs-on: ubuntu-latest

    steps:
      # Checkout source
      - name: Checkout source code
        uses: actions/checkout@v4

      # Python setup (change if you use another runtime)
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Dependencies & tests
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest tests/ -v --alluredir=allure-results

      # ---------------------------------------------------------------------
      # HISTORY: pull the existing ghâ€‘pages branch so we can merge new results
      # ---------------------------------------------------------------------
      - name: Checkout gh-pages for history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      # Ensure target directory exists (product/web/)
      - name: Prepare directory structure
        if: always()
        run: |
          mkdir -p gh-pages/${{ env.PROJECT }}/${{ env.MODULE }}

      # ---------------------------------------------------------------------
      # BUILD the Allure HTML report, telling the action where the previous
      # history lives so flakyâ€‘test charts are preserved.
      # ---------------------------------------------------------------------
      - name: Build Allure report (with history)
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages/${{ env.PROJECT }}/${{ env.MODULE }}
          allure_results: allure-results         # generated by pytest
          allure_history: allure-history         # temp dir for new report

      # Move the freshly built report to a versioned folder (run number)
      - name: Version the report
        if: always()
        run: |
          VERSION_DIR="gh-pages/${{ env.PROJECT }}/${{ env.MODULE }}/${{ github.run_number }}"
          rm -rf "$VERSION_DIR"
          mkdir -p "$VERSION_DIR"
          cp -r allure-history/* "$VERSION_DIR"/

      # ---------------------------------------------------------------------
      # PUBLISH everything back to the ghâ€‘pages branch
      # ---------------------------------------------------------------------
      - name: Publish to gh-pages
        uses: peaceiris/actions-gh-pages@v3.9.3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: gh-pages
          commit_message: "ci: Allure report for run #${{ github.run_number }}"

      # Post a handy link on PRs
      - name: Comment on PR with report link
        if: always() && github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ðŸ“Š **Allure report for run #${{ github.run_number }}**
            ðŸ”— https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ env.PROJECT }}/${{ env.MODULE }}/${{ github.run_number }}/index.html

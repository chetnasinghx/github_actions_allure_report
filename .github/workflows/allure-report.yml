name: API Tests with Allure Report

on:
  push:
    branches: [main]
    paths:
      - 'api/**'  # Only trigger when API code changes
  pull_request:
    branches: [main]
    paths:
      - 'api/**'  # Only trigger when API code changes
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  test-and-report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r api/requirements.txt

      - name: Run Tests
        run: |
          cd api
          pytest tests/ -v --alluredir=../allure-results

      - name: Checkout gh-pages branch for report history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Copy history from previous report
        if: always()
        continue-on-error: true
        run: |
          mkdir -p allure-results/history
          if [ -d "gh-pages/product/api/history" ]; then
            cp -r gh-pages/product/api/history/* allure-results/history/
          fi

      - name: Build Allure Test Report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: allure-results
          report_dir: allure-report

      - name: Extract Allure Summary
        id: allure_summary
        if: always()
        run: |
          SUMMARY_FILE="allure-report/widgets/summary.json"
          if [[ -f "$SUMMARY_FILE" ]]; then
            echo "summary<<EOF" >> $GITHUB_OUTPUT
            jq -r '
              .statistic |
              "🧪 Total: \(.total)
              ✅ Passed: \(.passed)
              ❌ Failed: \(.failed)
              ⚠️ Broken: \(.broken)
              🚫 Skipped: \(.skipped)"
            ' "$SUMMARY_FILE" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "summary=Allure summary not found" >> $GITHUB_OUTPUT
          fi

      - name: Deploy Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3.9.3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
          destination_dir: product/api/${{ github.run_number }}
          keep_files: true
          commit_message: "ci: API Allure report for run #${{ github.run_number }}"

      # Update the latest report link
      - name: Update latest report symlink
        if: always()
        run: |
          mkdir -p gh-pages/product/api
          cd gh-pages
          echo '<meta http-equiv="refresh" content="0; url=${{ github.run_number }}/index.html" />' > product/api/latest.html
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add product/api/latest.html
          git commit -m "Update latest API report link" || echo "No changes to commit"
          git push origin gh-pages || echo "No changes to push"

      - name: Comment on PR with Allure Report and Test Summary
        if: always() && github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v3.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### API Test Results
            
            🔗 **Allure Test Report**: 
            - [View Latest Run](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/product/api/${{ github.run_number }}/)
            - [View All Runs](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/product/api/)

            **Test Summary from Allure**
            ```
            ${{ steps.allure_summary.outputs.summary }}
            ```